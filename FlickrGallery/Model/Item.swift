// This file was generated by json2swift. https://github.com/pyckamil/json2swift

import Foundation
import Unbox

public struct Item: Equatable {
    public let author: String
    public let authorId: String
    public let dateTaken: String
    public let description: String
    public let link: URL
    public let media: Media
    public let published: String
    public let tags: String
    public let title: String
    public init(author: String, authorId: String, dateTaken: String,
                description: String, link: URL, media: Media, published: String, tags: String, title: String) {
        self.author = author
        self.authorId = authorId
        self.dateTaken = dateTaken
        self.description = description
        self.link = link
        self.media = media
        self.published = published
        self.tags = tags
        self.title = title
    }
}

extension Item: Unboxable {
    public init(unboxer: Unboxer) throws {
        self.author = try unboxer.unbox(key: "author")
        self.authorId = try unboxer.unbox(key: "author_id")
        self.dateTaken = try unboxer.unbox(key: "date_taken")
        self.description = try unboxer.unbox(key: "description")
        self.link = try unboxer.unbox(key: "link")
        self.media = try unboxer.unbox(key: "media")
        self.published = try unboxer.unbox(key: "published")
        self.tags = try unboxer.unbox(key: "tags")
        self.title = try unboxer.unbox(key: "title")
    }
}

public func == (lhs: Item, rhs: Item) -> Bool {
    return
        lhs.author == rhs.author
        && lhs.authorId == rhs.authorId
        && lhs.dateTaken == rhs.dateTaken
        && lhs.description == rhs.description
        && lhs.link == rhs.link
        && lhs.media == rhs.media
        && lhs.published == rhs.published
        && lhs.tags == rhs.tags
        && lhs.title == rhs.title
}
